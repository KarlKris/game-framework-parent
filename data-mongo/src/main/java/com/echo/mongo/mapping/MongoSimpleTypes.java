package com.echo.mongo.mapping;

import com.echo.common.util.SimpleTypeHolder;
import com.mongodb.DBRef;
import com.mongodb.client.model.geojson.*;
import org.bson.*;
import org.bson.types.*;

import java.math.BigInteger;
import java.time.Instant;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;
import java.util.regex.Pattern;

/**
 * mongodb 相关的简单类
 * @author: li-yuanwen
 */
public class MongoSimpleTypes {

    public static final Set<Class<?>> AUTOGENERATED_ID_TYPES;

    static {
        Set<Class<?>> classes = new HashSet<>();
        classes.add(ObjectId.class);
        classes.add(String.class);
        classes.add(BigInteger.class);
        AUTOGENERATED_ID_TYPES = Collections.unmodifiableSet(classes);

        Set<Class<?>> simpleTypes = new HashSet<>();
        simpleTypes.add(Binary.class);
        simpleTypes.add(DBRef.class);
        simpleTypes.add(Decimal128.class);
        simpleTypes.add(org.bson.Document.class);
        simpleTypes.add(Code.class);
        simpleTypes.add(CodeWScope.class);
        simpleTypes.add(CodeWithScope.class);
        simpleTypes.add(ObjectId.class);
        simpleTypes.add(Pattern.class);
        simpleTypes.add(Symbol.class);
        simpleTypes.add(UUID.class);
        simpleTypes.add(Instant.class);

        simpleTypes.add(BsonValue.class);
        simpleTypes.add(BsonNumber.class);
        simpleTypes.add(BsonType.class);
        simpleTypes.add(BsonArray.class);
        simpleTypes.add(BsonSymbol.class);
        simpleTypes.add(BsonUndefined.class);
        simpleTypes.add(BsonMinKey.class);
        simpleTypes.add(BsonMaxKey.class);
        simpleTypes.add(BsonNull.class);
        simpleTypes.add(BsonBinary.class);
        simpleTypes.add(BsonBoolean.class);
        simpleTypes.add(BsonDateTime.class);
        simpleTypes.add(BsonDbPointer.class);
        simpleTypes.add(BsonDecimal128.class);
        simpleTypes.add(BsonDocument.class);
        simpleTypes.add(BsonDouble.class);
        simpleTypes.add(BsonInt32.class);
        simpleTypes.add(BsonInt64.class);
        simpleTypes.add(BsonJavaScript.class);
        simpleTypes.add(BsonJavaScriptWithScope.class);
        simpleTypes.add(BsonObjectId.class);
        simpleTypes.add(BsonRegularExpression.class);
        simpleTypes.add(BsonString.class);
        simpleTypes.add(BsonTimestamp.class);

        simpleTypes.add(Geometry.class);
        simpleTypes.add(GeometryCollection.class);
        simpleTypes.add(LineString.class);
        simpleTypes.add(MultiLineString.class);
        simpleTypes.add(MultiPoint.class);
        simpleTypes.add(MultiPolygon.class);
        simpleTypes.add(Point.class);
        simpleTypes.add(Polygon.class);

        MONGO_SIMPLE_TYPES = Collections.unmodifiableSet(simpleTypes);
    }

    private static final Set<Class<?>> MONGO_SIMPLE_TYPES;

    public static final SimpleTypeHolder HOLDER = new SimpleTypeHolder(MONGO_SIMPLE_TYPES, true) {

        @Override
        public boolean isSimpleType(Class<?> type) {

            if (type.isEnum()) {
                return true;
            }

            if (type.getName().startsWith("java.time")) {
                return false;
            }

            return super.isSimpleType(type);
        }
    };

    private MongoSimpleTypes() {}

}
